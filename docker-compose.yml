version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: assistant_db
      POSTGRES_USER: assistant_user
      POSTGRES_PASSWORD: assistant_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - assistant_network

  # Redis for task queue
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - assistant_network

  # Personal Assistant API
  assistant_api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://assistant_user:assistant_password@postgres:5432/assistant_db
      - REDIS_URL=redis://redis:6379/0
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    volumes:
      - ./uploads:/app/uploads
      - ./templates:/app/templates
      - ./logs:/app/logs
    networks:
      - assistant_network
    restart: unless-stopped

  # Celery Worker for background tasks
  celery_worker:
    build: .
    command: celery -A app.celery worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://assistant_user:assistant_password@postgres:5432/assistant_db
      - REDIS_URL=redis://redis:6379/0
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    volumes:
      - ./uploads:/app/uploads
      - ./templates:/app/templates
      - ./logs:/app/logs
    networks:
      - assistant_network
    restart: unless-stopped

  # Celery Beat for scheduled tasks
  celery_beat:
    build: .
    command: celery -A app.celery beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql://assistant_user:assistant_password@postgres:5432/assistant_db
      - REDIS_URL=redis://redis:6379/0
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    volumes:
      - ./uploads:/app/uploads
      - ./templates:/app/templates
      - ./logs:/app/logs
    networks:
      - assistant_network
    restart: unless-stopped

  # pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@assistant.local
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - assistant_network
    profiles:
      - tools

  # Redis Commander for Redis management (optional)
  redis_commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - assistant_network
    profiles:
      - tools

volumes:
  postgres_data:
  redis_data:

networks:
  assistant_network:
    driver: bridge